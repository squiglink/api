networks:
  squiglink:
    name: squiglink

services:
  api:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - squiglink
    ports:
      - 3000:3000
    volumes:
      - .:/api

  postgres:
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      interval: 10s
      retries: 5
      test: ["CMD", "pg_isready", "-U", "${SQUIGLINK_POSTGRES_USER}"]
      timeout: 5s
    image: postgres:17.4-alpine3.21
    networks:
      - squiglink
    ports:
      - 5432:5432
    volumes:
      - ./docker/entrypoint.sql:/docker-entrypoint-initdb.d/entrypoint.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${SQUIGLINK_POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
